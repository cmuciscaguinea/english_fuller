import 'package:flutter/material.dart';
import 'package:audioplayers/audioplayers.dart';
import 'package:google_fonts/google_fonts.dart';

class LessonDetailScreen extends StatefulWidget {
  final int lessonNumber;
  static const String routeName = '/lessondetails';

  LessonDetailScreen({Key? key, required this.lessonNumber}) : super(key: key);

  @override
  State<LessonDetailScreen> createState() => _LessonDetailScreenState();
}

class _LessonDetailScreenState extends State<LessonDetailScreen> {
  final AudioPlayer audioPlayer = AudioPlayer();

  Map<String, dynamic> getLessonDetails(int lessonNumber) {
    var lessonContent = {
      
      // Vowel Sound
      1: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Alphabets Sounds',
        'words': ['Aa', 'Bb', 'Cc', 'Dd', 'Ee', 'Ff', 'Gg', 'Hh', 'Ii', 'Jj', 'Kk', 'Ll', 'Mm', 'Nn', 'Oo', 'Pp', 'Qq', 'Rr', 'Ss', 'Tt', 'Uu', 'Vv', 'Ww', 'Xx', 'Yy', 'Zz'],
      },

      2: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Vowel Sound (Aa)',
        'words': ['Bad', 'Dad', 'Lad', 'Bag', 'Nag', 'Wag', 'Rat', 'Mat', 'Fat', 'Gas', 'Has', 'Was', 'Cap', 'Gap', 'Map'],
      },

      3: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Vowel Sound (Ee)',
        'words': ['Bed', 'Red', 'Led', 'Beg', 'Leg', 'Peg', 'Gem', 'Bem', 'Hem', 'Pen', 'Ten', 'Yen', 'Get', 'Net', 'Set'],
      },

      4: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Vowel Sound (Ii)',
        'words': ['Bid', 'Lid', 'Kid',
          'Big', 'Gig', 'Wig',
          'Dim', 'Him', 'Jim',
          'Bin', 'Pin', 'Sin',
          'Dip', 'Lip', 'Sip'],
      },

      5: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Vowel Sound (Oo)',
        'words': ['Bog', 'Cog', 'Mog',
          'God', 'Nod', 'Rod',
          'Log', 'Hog', 'Jog',
          'Dot', 'Got', 'Hot',
          'Cot', 'Mot', 'Pot'],
      },

      6: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Vowel Sound (Uu)',
        'words': ['Cug', 'Rug', 'Tug',
          'Bud', 'Sud', 'Mud',
          'Bum', 'Hum', 'Sum',
          'Bun', 'Fun', 'Run',
          'But', 'Hut', 'Rut'],
      },

      7: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Hickory Dickory Dock',
        'words': ['Hickory, dickory, dock. The mouse ran up the clock. The clock struck one. The mouse ran down. Hickory, dickory, dock!'],
      },

      8: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Incy Wincy Spider',
        'words': ['Incy Wincy spider climbing up the water spout, Down came the rain and washed for wincy out. Out came the sunshine and dried up all the rain, And Incy Wincy spider climbed up the spout again.'],
      },

      9: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Miss Polly had a Dolly',
        'words': ['Miss Polly had a dolly who was sick, sick, sick. So, she phoned for the doctor to be quick, quick, quick. The doctor came with his bag and hat And knocked at the door with a rat-a-tat-tat. He looked at the dolly and shook his head And he said “Miss Polly, put her straight to bed!” He wrote a pad for a pill, pill, pill “I’ll be back in the morning with my bill, bill, bill."'],
      },

      // Rhyming Words

      10: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Rythming Words /al/',
        'words': ['Ball', 'Call', 'Tall',
          'Wall', 'Fall'],
      },

      11: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Rythming Words /ar/',
        'words': ['Car', 'Bar', 'Far',
          'Jar', 'Star'],
      },

      12: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Rythming Words /at/',
        'words': ['Cat', 'Bat', 'Hat',
          'Rat', 'Sat'],
      },


      13: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Rythming Words /ee/',
        'words': ['Free', 'Three', 'Tree',
          'Bee', 'Knee'],
      },

      14: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Rythming Words /ell/',
        'words': ['Shell', 'Bell', 'Smell',
          'Spell', 'Swell'],
      },

      // Vowels Words

      15: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Rhyming Words (/uck/)',
        'words': ['Duck', 'Truck', 'Luck', 'Buck', 'Pluck'],
      },

      // Vowel and Consonant word sound
      16: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'WORDS WITH LONG a OR /ey/',
        'words': ['Back', 'Bake', 'Can', 'Cane', 
        'Cap', 'Lack', 'Lake', 'Mad', 'Made', 
        'Mat', 'Mate', 'Pan', 'Pane', 'Sack', 'Sake',
        'Shack', 'Shake', 'Sham', 'Shame', 'Tap', 'Tape', 
        'A man with cane', 'A nap', 'Bake a pan cake', 'An old man baked a pan cake with care.'],
      },

      17: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'WORDS WITH ai SOUNDS AS LONG a OR /ey/',
        'words': ['Ail', 'Fail', 'Grain', 'Main', 
        'Rail', 'Rain', 'Trail', 'Train',  
        'Repaint the wall', 'Of paint', 'A housemaid', 
        'A housemaid repaints the wall with a pail.'],
      },

      18: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'WORDS WITH au SOUNDS /õ/ OR /ow/',
        'words': ['Cause', 'Paul', 'Sauce',
        'Caught for a cause', 'Paul taught', 'Cook a cup of sauce', 
        'Paul taught John to cook sauce.'],
      },

      19: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'WORDS WITH aw SOUNDS AS /ow/ or /ò/',
        'words': ['Crawl', 'Dawn', 'Draw', 'Jaw', 'Law', 
        'Staw', 'Law to follow', 'Sorry for the flaw',
        'The claws of the hawk can kill its prey.'],
      },

      20: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'WORDS WITH ie SOUNDS /ë/ OR /iy/',
        'words': ['Believe', 'Brief', 'Field', 'Grief', 
        'Relief', 'Yield', 'Priest in the field.', 
        'The thief hides', 'Believe to relieve', 
        'The chief of police released the thief because he is underage.'],
      },

      21: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'WORDS WITH ie SOUNDS /ay/ OR long i',
        'words': ['Die', 'Died', 'Fried', 'Lie', 'Lied', 'Lies', 'Tries',
        'She lies to fight', 'Tries to tie', 'When he dies', 
        'Father tries to tie the sack full of dried palay.'],
      },

    
      22: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'WORDS WITH /ew/',
        'words': ['Anew','Blew', 'Chew', 'Drew', 'Few', 
        'Grew', 'News', 'Threw', 'Blew the candles',
         'Few are new', 'Join the crew', 'The boy has a new coin.'],
      },

      23: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'WORDS WITH y SOUNDED AS /ay/ OR long i',
        'words': ['Fly', 'My', 'Reply', 'Sky', 'Why', 
        'Deny to reply', 'Fly in the sky', 'Rely on reply',
        'My shy friends try to deny the reply of their parents.'],
      },

      // Consonant Blend
      24: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Consonant Blend /bl/',
        'words': ['Blame', 'Blast', 'Bleach', 'Bless', 'Block', 
        'Blot', 'Blue', 'A black blouse', 'A blue bloomer',
        'Blame the blond', 'The blade on the block.',
        'Blesildas favorite colors are black and white.'],
      },

      25: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Consonant Blend /br/',
        'words': ['Branch', 'Breast', 'Bride', 'Brood',  
        'Brother', 'Brown', 'A bragging brat', 
        'A broken breast', 'Brandy lost his brakes near the bridge.'],
      },

      26: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Consonant Blend /cr/',
        'words': ['Crash', 'Cream', 'Crook', 'Crop',  
        'Cross', 'Crow', 'Cry', 'Cry in the cradle', 
        'Crawl in the crip', 'Christy put a cream in he coffee.'],
      },

      27: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Consonant Blend /dr/',
        'words': ['Drain', 'Drama', 'Draw', 'Drawer',  
        'Dream', 'Drench', 'Drive', 'Drown', 'Draw a dragon', 
        'Dress in the draw', 'Dresden drew a dragon and a dragonfly yesterday.'],
      },

      28: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Consonant Blend /fl/',
        'words': ['Flake', 'Flash', 'Flat', 'Flee', 'Fleet',
        'Flow', 'Flunk', 'Flute', 'A fleet of flagships', 
        'Flowers in a flask', 'The Filipino flag fly high in our school.'],
      },

      29: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Consonant Blend /fr/',
        'words': ['Fraction', 'Frank', 'Free', 'Frequent',  
        'Fresh', 'From', 'Front', 'Frown', 'Fresh fruits', 
        'A frail man', 'The farmer harvested fresh fruits from the farm.'],
      },


      30: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Consonant Blend /tr/',
        'words': ['Travel', 'Treat', 'Trees', 'Tribe',  
        'Trick', 'Trip', 'Troop', 'Try', 'Transfer the tray', 
        'A trap in the tractor', 'Dina transfer the tray in the kitchen.'],
      },

     31: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Consonant Blend /sw/',
        'words': ['Swallow', 'Swamp', 'Swat', 'Sway', 
          'Swift', 'Swing', 'Swollen', 'Sweets in her sweater', 'The lovely swan swim in the shallow river.'],
      },

      

      32: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Consonant Blend /sh/',
        'words': ['Shake', 'Shark', 'Shoot', 'Shoulder',  
        'Shovel', 'Show', 'A short shirt' ],
      },

      // The Consonant Cluster
      33: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Consonant Cluster /str/',
        'words': ['Stretch', 'Strike', 'String', 'Stroke',  
        'Struck',  'A stranger in stripes', 'Stroll by the stream', 
        'The father of Liza is very strict.'],
      },

      34: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Consonant Cluster /spl/',
        'words': ['Splatter', 'Spleen', 'Splendid', 'Splendor',  
        'Splice', 'Split', 'Splutter', 'A splash of water', 'Split on the floor', 
        'Ana split on the stage in her dance.'],
      },

      35: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Consonant Cluster /scr/',
        'words': ['Scramble', 'Scarp', 'Scratch', 'Screen',  
        'Screw', 'Scrub', 'Scrawl', 'Scraped the cheese', 'Scroll the tarp', 
        'Mr. Diaz scraped off the paint of his car.'],
      },

      // The Final Consonant Blend
      36: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Final Consonant Blend /st/',
        'words': ['Best', 'Coast', 'East', 'Ghost',  
        'Post', 'Thirst', 'Waist', 'West', 'A best book', 'Dust in the furniture', 
        'The grooms wear their vest.'],
      },

      37: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Final Consonant Blend /rt/',
        'words': ['Cart', 'Part', 'Port', 'Report',  
        'Shirt', 'Skirt', 'Sport', 'Start', 'A dirty shirt', 'Sport in an exercise', 
        'The basketball is a good sport for the young boys.'],
      },

      38: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Final Consonant Blend /rk/',
        'words': ['Bark', 'Cork', 'Dark', 'Fork',  
        'Lark', 'Park', 'Spark', 'Work', 'A beautiful park', 'Night time is dark', 
        'Maramag Municipal Park is beautiful.'],
      },

      39: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Final Consonant Blend /nk/',
        'words': ['Bank', 'Dank', 'Drink', 'Drunk',  
        'Flunk', 'Sunk', 'Wink', 'Drink plenty of water', 'Third the rank', 
        'Miss. Philippines was third in rank.'],
      },

      40: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Final Consonant Blend /nd/',
        'words': ['Bend', 'Blind', 'Found', 'Ground',  
        'Mend', 'Pound', 'Sand', 'Send', 'A blind man', 'Sand on his hand', 
        'The children play sand in the seashore.'],
      },

    };

    return lessonContent[lessonNumber] ?? {
      'title': 'Lesson Not Found',
      'subTitle': '',
      'words': [],
    };
  }

  @override
  void dispose() {
    audioPlayer.release();
    audioPlayer.dispose();
    super.dispose();
  }


  Map<int, List<String>> lessonAudioMap = {
  1: ['aa.mp3', 'bb.mp3', 'cc.mp3', 'dd.mp3', 
      'ee.mp3', 'ff.mp3', 'gg.mp3', 'hh.mp3',
      'ii.mp3', 'jj.mp3', 'kk.mp3', 'll.mp3',
      'mm.mp3', 'nn.mp3', 'oo.mp3', 'pp.mp3',
      'qq.mp3', 'rr.mp3', 'ss.mp3', 'tt.mp3',
      'uu.mp3', 'vv.mp3', 'ww.mp3', 'xx.mp3',
      'yy.mp3', 'zz.mp3',],
       // Lesson 1 files
  2: ['Bad.mp3', 'Dad.mp3', 'Lad.mp3', 'Bag.mp3', 
      'Nag.mp3', 'Wag.mp3', 'Rat.mp3', 'Mat.mp3', 
      'Fat.mp3', 'Gas.mp3', 'Has.mp3', 'Was.mp3', 
      'Cap.mp3', 'Gap.mp3', 'Map.mp3' ],

  3: ['Bed.mp3', 'Red.mp3', 'Led.mp3', 'Beg.mp3', 
      'Leg.mp3', 'Peg.mp3', 'Gem.mp3', 'Bem.mp3', 
      'Hem.mp3', 'Pen.mp3', 'Ten.mp3', 'Yen.mp3', 
      'Get.mp3', 'Net.mp3', 'Set.mp3' ],

  4: ['Bid.mp3', 'Lid.mp3', 'Kid.mp3',
      'Big.mp3', 'Gig.mp3', 'Wig.mp3',
      'Dim.mp3', 'Him.mp3', 'Jim.mp3',
      'Bin.mp3', 'Pin.mp3', 'Sin.mp3',
      'Dip.mp3', 'Lip.mp3', 'Sip.mp3' ],

  5: ['Bog.mp3', 'Cog.mp3', 'Mog.mp3',
      'God.mp3', 'Nod.mp3', 'Rod.mp3',
      'Log.mp3', 'Hog.mp3', 'Jog.mp3',
      'Dot.mp3', 'Got.mp3', 'Hot.mp3',
      'Cot.mp3', 'Mot.mp3', 'Pot.mp3' ],

  6: ['Cug.mp3', 'Rug.mp3', 'Tug.mp3',
      'Bud.mp3', 'Sud.mp3', 'Mud.mp3',
      'Bum.mp3', 'Hum.mp3', 'Sum.mp3',
      'Bun.mp3', 'Fun.mp3', 'Run.mp3',
      'But.mp3', 'Hut.mp3', 'Rut.mp3' ],

  7: ['Hickory Dickory Dock.mp3'],
  8: ['Incy Wincy Spider.mp3'],
  9: ['Miss Polly.mp3'],
  
  10: ['Ball.mp3', 'Call.mp3', 'Tall.mp3',
          'Wall.mp3', 'Fall.mp3' ],

  11: ['Car.mp3', 'Bar.mp3', 'Far.mp3',
          'Jar.mp3', 'Star.mp3'],


  12: ['Cat.mp3', 'Bat.mp3', 'Hat.mp3',
          'Rat.mp3', 'Sat.mp3'],

  13: ['Free.mp3', 'Three.mp3', 'Tree.mp3',
          'Bee.mp3', 'Knee.mp3'],

  14: ['Shell.mp3', 'Bell.mp3', 'Smell.mp3',
          'Spell.mp3', 'Swell.mp3'],

  15: ['Duck.mp3', 'Truck.mp3', 'Luck.mp3', 'Buck.mp3', 'Pluck.mp3'],

  16: ['back.mp3','bake.mp3', 'can.mp3', 'cane.mp3', 'cap.mp3',
        'lack.mp3', 'lake.mp3', 'mad.mp3', 'made.mp3', 'mat.mp3',
        'mate.mp3', 'pan.mp3', 'pane.mp3', 'sack.mp3', 'sake.mp3', 
        'shack.mp3', 'shake.mp3','sham.mp3', 'shame.mp3', 'tap.mp3', 
        'tape.mp3', 'A man with cane.mp3', 'A nap.mp3', 'Bake a pan cake.mp3', 
        'An old man baked a pan cake with care.mp3' ],

  17: ['ail.mp3','fail.mp3', 'grain.mp3', 'main.mp3', 'rail.mp3',
        'rain.mp3', 'trail.mp3', 'train.mp3', 'repaint the wall.mp3', 
        'of paint.mp3', 'a housemaid.mp3', 'A housemaid repaints the wall with a pail.mp3' ],
    
  18: ['Cause.mp3','Paul.mp3', 'Pause.mp3', 'Sauce.mp3', 
        'Caught for a cause.mp3', 'Paul taught.mp3', 'Cook a cup of sauce.mp3', 
        'Paul taught John to cook sauce.mp3' ],

  19: ['Crawl.mp3','Dawn.mp3', 'Draw.mp3', 'jaw.mp3', 'law.mp3',
        'Staw.mp3', 'Law to follow.mp3', 'Sorry for the flaw.mp3',
        'The claws of the hawk can kill its prey.mp3' ],

  20: ['believe.mp3','brief.mp3', 'field.mp3', 'grief.mp3', 'relief.mp3',
        'yield.mp3', 'priest in the field.mp3', 'the thief hides.mp3', 
        'believe to relieve.mp3', 'The chief of police released the thief because he is underage.mp3' ],

  21: ['die.mp3','died.mp3', 'fried.mp3', 'lie.mp3', 'lied.mp3',
        'lies.mp3', 'tries.mp3', 'she lies to fight.mp3', 
        'tries to tie.mp3', 'when he dies.mp3', 
        'Father tries to tie the sack full of dried palay.mp3' ], 

  22: ['Anew.mp3', 'blew.mp3', 'chew.mp3', 'drew.mp3', 'few.mp3',
        'grew.mp3', 'News.mp3', 'threw.mp3', 'Blew the candles.mp3', 
        'Few are new.mp3', 'Join the crew.mp3', 
        'The boy has a new coin.mp3' ], 

  23: ['Fly.mp3','My.mp3', 'Reply.mp3', 'Sky.mp3', 'Why.mp3',
        'Deny to reply.mp3', 'Fly in the sky.mp3', 'Rely on reply.mp3', 
        'My shy friends try to deny the reply of their parents.mp3' ], 

  24: ['blame.mp3','blast.mp3', 'bleach.mp3', 'bless.mp3', 'block.mp3',
        'blot.mp3', 'blue.mp3', 'A blue bloomer.mp3', 'Blame the blond.mp3',
         'A black blouse.mp3', 'the blade on the block.mp3', 
        'Blesildas favorite colors are black and white.mp3' ], 

  25: ['branch.mp3','breast.mp3', 'bride.mp3', 'bridge.mp3', 'block.mp3',
        'brood.mp3', 'brother.mp3', 'brown.mp3', 'A bragging brat.mp3',
         'A broken breast.mp3', 'Brandy lost his brakes near the bridge.mp3'],

  26: ['crash.mp3','cream.mp3', 'crook.mp3', 'crop.mp3', 'cross.mp3',
        'crow.mp3', 'cry.mp3', 'Crawl in the crip.mp3', 'Cry in the cradle.mp3',
          'Christy put a cream in he coffee.mp3' ],

  27: ['drain.mp3','drama.mp3', 'draw.mp3', 'drawer.mp3', 'dream.mp3',
        'drench.mp3', 'drive.mp3', 'drown.mp3', 'Draw a dragon.mp3', 
        'Dress in the draw.mp3', 'Dresden drew a dragon and a dragonfly yesterday.mp3' ],

  28: ['flake.mp3', 'flash.mp3', 'flat.mp3', 'flee.mp3', 'fleet.mp3',
        'flow.mp3', 'flunk.mp3', 'flute.mp3', 'a fleet of flagships.mp3', 
        'flowers in a flask.mp3', 'The Filipino flag fly high in our school.mp3' ],

  29: ['fraction.mp3', 'frank.mp3', 'free.mp3', 'frequent.mp3', 'fleet.mp3',
        'fresh.mp3', 'from.mp3', 'front.mp3', 'frown.mp3', 'a frail man.mp3', 
        'Fresh fruits.mp3', 'The farmer harvested fresh fruits from the farm.mp3' ],

  30: ['travel.mp3', 'treat.mp3', 'trees.mp3', 'tribe.mp3', 'trick.mp3',  
        'trip.mp3', 'troop.mp3', 'try.mp3', 'a trap in the tractor.mp3', 'transfer the tray.mp3', 
        'Dina transfer the tray in the kitchen.mp3' ],

  31: ['swallow.mp3', 'swamp.mp3', 'swat.mp3', 'sway.mp3', 'swift.mp3', 'swing.mp3', 'swollen.mp3',
        'Sweets in her sweater.mp3', 'The lovely swan swim in the shallow river.mp3'],

  32: ['shake.mp3', 'shark.mp3', 'shoot.mp3', 'shoulder.mp3', 'shovel.mp3',  
        'show.mp3', 'a short shirt.mp3' ],

  33: ['stretch.mp3', 'strike.mp3', 'string.mp3', 'stroke.mp3', 'struck.mp3',  
        'a stranger in stripes.mp3', 'stroll by the stream.mp3', 
        'The father of Liza is very strict.mp3' ],

  34: ['splatter.mp3', 'spleen.mp3', 'splendid.mp3', 'splendor.mp3', 'splice.mp3',  
        'split.mp3', 'splutter.mp3', 'a splash of water.mp3', 'split on the floor.mp3',
        'Ana split on the stage in her dance.mp3' ],

  35: ['scramble.mp3', 'scarp.mp3', 'scratch.mp3', 'scrawl.mp3', 'screen.mp3',  
        'screw.mp3', 'scrub.mp3', 'scraped the cheese.mp3', 'scroll the tarp.mp3',
        'Mr. Diaz scraped off the paint of his car.mp3' ],      

  36: ['best.mp3', 'coast.mp3', 'east.mp3', 'ghost.mp3', 'post.mp3',  
        'thirst.mp3', 'waist.mp3', 'west.mp3', 'A best book.mp3', 'Dust in the furniture.mp3',
        'The grooms wear their vest.mp3' ], 

  37: ['cart.mp3', 'part.mp3', 'port.mp3', 'report.mp3', 'shirt.mp3',  
        'skirt.mp3', 'sport.mp3', 'start.mp3', 'a dirty shirt.mp3', 'Sport in an exercise.mp3',
        'The basketball is a good sport for the young boys.mp3' ], 

  38: ['bark.mp3', 'cork.mp3', 'dark.mp3', 'fork.mp3', 'lark.mp3',  
        'park.mp3', 'spark.mp3', 'work.mp3', 'night time is dark.mp3', 'a beautiful park.mp3',
        'Maramag Municipal Park is beautiful.mp3' ], 

  39: ['bank.mp3', 'dank.mp3', 'drink.mp3', 'drunk.mp3', 'flunk.mp3',  
        'sunk.mp3', 'wink.mp3', 'third the rank.mp3', 'drink plenty of water.mp3',
        'Miss. Philippines was third in rank.mp3' ], 

  40: ['bend.mp3', 'blind.mp3', 'found.mp3', 'ground.mp3', 'mend.mp3',  
        'pound.mp3', 'sand.mp3', 'send.mp3', 'a blind man.mp3', 'sand on his hand.mp3',
        'The children play sand in the seashore.mp3' ], 

  };



Future<void> playSound(String word) async {
  try {
    String audioPath = 'sounds/'; // Use 'assets/' as the base path to match with your assets

    // Dynamically select the correct folder based on the lesson number
    String lessonFolder = 'lessons${widget.lessonNumber}';

    if (lessonAudioMap.containsKey(widget.lessonNumber)) {
      List<String> lessonFiles = lessonAudioMap[widget.lessonNumber]!;

      bool foundMatch = false;
      String fileName = '';
      String bestMatch = ''; // Variable to keep track of the best match (longest file name)

      // Normalize word and file name (remove punctuation and compare)
      String normalizedWord = word.replaceAll(RegExp(r'[^a-zA-Z\s]'), '').toLowerCase();

      for (var file in lessonFiles) {
        String normalizedFileName = file.split('.')[0].toLowerCase();

        // First, check for exact match
        if (normalizedWord == normalizedFileName) {
          fileName = file;
          foundMatch = true;
          break;
        }

        // If no exact match, check if the word contains the file name or vice versa
        if (normalizedWord.contains(normalizedFileName) || normalizedFileName.contains(normalizedWord)) {
          // Prefer longer matches if both shorter and longer file names exist
          if (normalizedFileName.length > bestMatch.length) {
            bestMatch = normalizedFileName;
            fileName = file;
            foundMatch = true;
          }
        }
      }

      if (!foundMatch) {
        print("No audio file found for word: $word in Lesson ${widget.lessonNumber}");
        return;
      }

      audioPath += '$lessonFolder/$fileName'; // Append folder and file name without modification
    } else {
      print("No audio mapping found for Lesson ${widget.lessonNumber}");
      return;
    }

    if (audioPath.isNotEmpty) {
      print("Attempting to play: $audioPath");
      Source audioSource = AssetSource(audioPath);
      await audioPlayer.play(audioSource);
      print("Playback started for $audioPath");
    }
  } catch (e) {
    print("Error playing sound: ${e.toString()}");
  }
}



  @override
  Widget build(BuildContext context) {
    final lessonDetails = getLessonDetails(widget.lessonNumber);

    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.green,
        title: Text(
          lessonDetails['title'],
          style: GoogleFonts.lexendDeca(),
        ),
        leading: IconButton(
          icon: Icon(Icons.arrow_back),
          onPressed: () {
            Navigator.of(context).pop();
          },
        ),
      ),
      body: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          Padding(
            padding: const EdgeInsets.symmetric(vertical: 16.0),
            child: Text(
              lessonDetails['subTitle'],
              style: GoogleFonts.lexendDeca(
                fontSize: 24,
              ),
              textAlign: TextAlign.center,
            ),
          ),
          Expanded(
            child: ListView.builder(
              padding: EdgeInsets.all(8.0),
              itemCount: lessonDetails['words'].length,
              itemBuilder: (context, index) {
                String word = lessonDetails['words'][index];
                bool isLongSentence = word.length > 50; // You can adjust the length threshold

                return Container(
                  padding: EdgeInsets.all(8.0),
                  margin: EdgeInsets.symmetric(vertical: 5.0),
                  decoration: BoxDecoration(
                    color: Colors.white,
                    borderRadius: BorderRadius.circular(8),
                    boxShadow: [
                      BoxShadow(
                        color: Colors.grey.withOpacity(0.5),
                        blurRadius: 4,
                        offset: Offset(0, 2),
                      ),
                    ],
                  ),
                  child: isLongSentence
                      ? Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          crossAxisAlignment: CrossAxisAlignment.center,
                          children: [
                            Text(
                              word,
                              style: GoogleFonts.lexendDeca(
                                fontSize: 30,
                                color: Colors.black,
                                height: 1.5, // Adjust line height for readability
                              ),
                              textAlign: TextAlign.center,
                            ),
                            SizedBox(height: 8.0),
                            IconButton(
                              icon: Icon(
                                Icons.play_circle,
                                color: Colors.green,
                                size: 40,
                              ),
                              onPressed: () {
                                playSound(word);
                              },
                            ),
                          ],
                        )
                      : Row(
                          mainAxisAlignment: MainAxisAlignment.start,
                          children: [
                            Expanded(
                              child: Text(
                                word,
                                style: GoogleFonts.lexendDeca(
                                  fontSize: 30,
                                  color: Colors.black,
                                ),
                                textAlign: TextAlign.left,
                              ),
                            ),
                            IconButton(
                              icon: Icon(
                                Icons.play_circle,
                                color: Colors.green,
                                size: 40,
                              ),
                              onPressed: () {
                                playSound(word);
                              },
                            ),
                          ],
                        ),
                );
              },
            ),
          ),
          Padding(
            padding: const EdgeInsets.symmetric(vertical: 20.0, horizontal: 20.0),
            child: ElevatedButton(
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.green,
                padding: EdgeInsets.symmetric(vertical: 20, horizontal: 100),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(10),
                ),
              ),
              onPressed: () {
                Navigator.pop(context, widget.lessonNumber);
                print("Proceed Next Lessons");
              },
              child: Text(
                'Next Lesson',
                style: GoogleFonts.lexendDeca(
                  fontSize: 20,
                  color: Colors.white,
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}
