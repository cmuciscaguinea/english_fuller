import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:audioplayers/audioplayers.dart';
import '../lib/lesson_data.dart';

class DynamicLessonPlayer extends StatefulWidget {
  final int lessonNumber;
  const DynamicLessonPlayer({Key? key, required this.lessonNumber}) : super(key: key);

  @override
  _DynamicLessonPlayerState createState() => _DynamicLessonPlayerState();
}

class _DynamicLessonPlayerState extends State<DynamicLessonPlayer> {
  late List<String> words;
  int currentWordIndex = 0;
  bool isPlaying = false;
  final AudioPlayer _audioPlayer = AudioPlayer();
  final int totalAudioDuration = 17000; // Example duration in milliseconds

  @override
  void initState() {
    super.initState();
    words = getLessonDetails(widget.lessonNumber)['words'];
  }

  @override
  void dispose() {
    _audioPlayer.dispose();
    super.dispose();
  }

  void _playAudioWithHighlight() async {
  final lessonDetails = getLessonDetails(widget.lessonNumber);
  final audioPath = lessonDetails['audioPath'];
  final timings = lessonDetails['timings'];

  try {
    await _audioPlayer.stop();
    await _audioPlayer.play(AssetSource(audioPath));
    setState(() {
      isPlaying = true;
      currentWordIndex = 0;
    });
    _highlightWordsWithAudio(timings);
  } catch (e) {
    print('Error playing audio: $e');
  }
}


  void _highlightWordsWithAudio(List<int> timings) {
  for (int i = 0; i < timings.length; i++) {
    Future.delayed(Duration(milliseconds: timings[i]), () {
      if (mounted) {
        setState(() {
          currentWordIndex = i; // Highlight the current word
        });
      }
    });
  }
}


  @override
  Widget build(BuildContext context) {
    double fontSize = MediaQuery.of(context).size.width * 0.07;

    return Scaffold(
      appBar: AppBar(
        title: Text(
          getLessonDetails(widget.lessonNumber)['title'],
          style: GoogleFonts.lexendDeca(),
        ),
        backgroundColor: Colors.green,
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(
              getLessonDetails(widget.lessonNumber)['subTitle'],
              style: GoogleFonts.lexendDeca(
                fontSize: 30,
                fontWeight: FontWeight.bold,
                color: Colors.red,
              ),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(20.0),
              decoration: BoxDecoration(
                color: Colors.white,
                borderRadius: BorderRadius.circular(10),
                boxShadow: [
                  BoxShadow(
                    color: Colors.grey.withOpacity(0.3),
                    spreadRadius: 2,
                    blurRadius: 5,
                  ),
                ],
              ),
              child: RichText(
                text: TextSpan(
                  children: words.asMap().entries.map((entry) {
                    int index = entry.key;
                    String word = entry.value;
                    return TextSpan(
                      text: '$word ',
                      style: GoogleFonts.lexendDeca(
                        fontSize: fontSize,
                        fontWeight: FontWeight.bold,
                        color: index == currentWordIndex ? Colors.red : Colors.black,
                      ),
                    );
                  }).toList(),
                ),
                textAlign: TextAlign.center,
              ),
            ),
            const SizedBox(height: 30),
            IconButton(
              icon: Icon(
                isPlaying ? Icons.stop_circle_outlined : Icons.play_circle_outline,
                color: Colors.green,
                size: 60,
              ),
              onPressed: _playAudioWithHighlight,
            ),
          ],
        ),
      ),
    );
  }
}
