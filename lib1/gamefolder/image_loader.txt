import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'game_content.txt';
import 'audio_handler.txt';

class GamePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          "Game",
          style: GoogleFonts.lexendDeca(),
        ),
        backgroundColor: Colors.green,
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(
              "Choose a Game!",
              style: GoogleFonts.lexendDeca(fontSize: 20, color: Colors.black),
            ),
            SizedBox(height: 20),
            GameButton(
              title: "Game 1",
              color: Colors.amber,
              textColor: Colors.black,
              onPressed: () => _startGame(context, 1),
            ),
            GameButton(
              title: "Game 2",
              color: Colors.purple,
              textColor: Colors.white,
              onPressed: () => _startGame(context, 2),
            ),
            GameButton(
              title: "Game 3",
              color: Colors.orange,
              textColor: const Color.fromARGB(255, 110, 76, 1),
              onPressed: () => _startGame(context, 3),
            ),
            GameButton(
              title: "Game 4",
              color: Colors.purple,
              textColor: Colors.white,
              onPressed: () => _startGame(context, 4),
            ),
            GameButton(
              title: "Game 5",
              color: Colors.purple,
              textColor: Colors.white,
              onPressed: () => _startGame(context, 5),
            ),
            GameButton(
              title: "Game 6",
              color: Colors.purple,
              textColor: Colors.white,
              onPressed: () => _startGame(context, 6),
            ),
            GameButton(
              title: "Game 7",
              color: Colors.purple,
              textColor: Colors.white,
              onPressed: () => _startGame(context, 7),
            ),
            GameButton(
              title: "Game 8",
              color: Colors.purple,
              textColor: Colors.white,
              onPressed: () => _startGame(context, 8),
            ),
            GameButton(
              title: "Game 9",
              color: Colors.purple,
              textColor: Colors.white,
              onPressed: () => _startGame(context, 9),
            ),
            GameButton(
              title: "Game 10",
              color: Colors.purple,
              textColor: Colors.white,
              onPressed: () => _startGame(context, 10),
            ),
          ],
        ),
      ),
    );
  }

  void _startGame(BuildContext context, int gameId) {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) => GameDetailPage(gameId: gameId),
      ),
    );
  }
}

class GameDetailPage extends StatefulWidget {
  final int gameId;

  const GameDetailPage({Key? key, required this.gameId}) : super(key: key);

  @override
  _GameDetailPageState createState() => _GameDetailPageState();
}

class _GameDetailPageState extends State<GameDetailPage> {
  late GameContent gameContent;
  String? selectedAnswer;
  String feedbackMessage = "";
  Color feedbackColor = Colors.transparent;

  @override
  void initState() {
    super.initState();
    gameContent = GameContent.getGameContent(widget.gameId);
  }

Widget loadImage(String imagePath) {
  return Container(
    width: 100,  // Set the desired width
    height: 200, // Set the desired height
    child: Image.asset(
      imagePath,
      //fit: BoxFit.cover, // Optional: ensure the image fits within the constraints
    ),
  );
}




  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          "Game ${widget.gameId}",
          style: GoogleFonts.lexendDeca(fontWeight: FontWeight.bold),
        ),
        backgroundColor: Colors.green,
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(
              "Game Sound and Picture",
              style: GoogleFonts.lexendDeca(fontSize: 22,),
            ),
            SizedBox(height: 20),
            loadImage(gameContent.imagePath),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                playSound(gameContent.audioPath);
              },
              child: Icon(Icons.play_arrow),
              style: ElevatedButton.styleFrom(
                shape: CircleBorder(),
                padding: EdgeInsets.all(10),
                backgroundColor: Colors.blue,
              ),
            ),
            SizedBox(height: 20),
            Text(
              feedbackMessage,
              style: GoogleFonts.lexendDeca(
                fontSize: 18,
                //fontWeight: FontWeight.bold,
                color: feedbackColor,
              ),
            ),
            SizedBox(height: 20),
            ...gameContent.answers.map((answer) => _buildAnswerButton(answer)).toList(),
          ],
        ),
      ),
    );
  }

  Widget _buildAnswerButton(String answer) {
    Color buttonColor = Colors.grey[300]!; // Default button color
    if (selectedAnswer == answer) {
      buttonColor = (answer == gameContent.correctAnswer) ? Colors.green : Colors.red;
    }

    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: ElevatedButton(
        onPressed: () => _checkAnswer(answer),
        child: Text(
          answer,
          style: GoogleFonts.lexendDeca(fontSize: 16),
        ),
        style: ElevatedButton.styleFrom(
          backgroundColor: buttonColor,
          padding: EdgeInsets.symmetric(horizontal: 32, vertical: 16),
        ),
      ),
    );
  }

  void _checkAnswer(String answer) {
    setState(() {
      selectedAnswer = answer;
      if (answer == gameContent.correctAnswer) {
        feedbackMessage = "Correct!";
        feedbackColor = Colors.green;
      } else {
        feedbackMessage = "Try Again!";
        feedbackColor = Colors.red;
      }
    });
  }
}

class GameButton extends StatelessWidget {
  final String title;
  final VoidCallback onPressed;
  final Color color;
  final Color textColor;

  const GameButton({
    Key? key,
    required this.title,
    required this.onPressed,
    required this.color,
    this.textColor = Colors.white, // Default text color
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: ElevatedButton(
        onPressed: onPressed,
        child: Text(
          title,
          style: GoogleFonts.lexendDeca(
            fontSize: 18,
            color: textColor,
          ),
        ),
        style: ElevatedButton.styleFrom(
          backgroundColor: color,
          padding: EdgeInsets.symmetric(horizontal: 32, vertical: 16),
        ),
      ),
    );
  }
}
