import 'package:english_fuller/game_details.dart';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:shared_preferences/shared_preferences.dart';

/// Data model to hold game details.
class GameData {
  final int id;
  final String title;
  final Color color;
  final Color textColor;

  GameData({required this.id, required this.title, required this.color, required this.textColor});
}

// List of games with their properties.
final List<GameData> games = [
  GameData(id: 1, title: "Game 1", color: Colors.amber, textColor: Colors.black),
  GameData(id: 2, title: "Game 2", color: Colors.purple, textColor: Colors.white),
  GameData(id: 3, title: "Game 3", color: Colors.orange, textColor: Colors.black),
  GameData(id: 4, title: "Game 4", color: Colors.green, textColor: Colors.white),
  GameData(id: 5, title: "Game 5", color: Colors.blue, textColor: Colors.white),
  GameData(id: 6, title: "Game 6", color: Colors.teal, textColor: Colors.white),
  GameData(id: 7, title: "Game 7", color: Colors.red, textColor: Colors.white),
  GameData(id: 8, title: "Game 8", color: Colors.pink, textColor: Colors.black),
  GameData(id: 9, title: "Game 9", color: Colors.brown, textColor: Colors.white),
  GameData(id: 10, title: "Game 10", color: Colors.grey, textColor: Colors.black),
];

class GameList extends StatefulWidget {
  @override
  _GameListState createState() => _GameListState();
}

class _GameListState extends State<GameList> {
  Set<int> completedGames = {}; // Tracks completed games

  @override
  void initState() {
    super.initState();
    _loadCompletedGames(); // Load completed games from SharedPreferences
  }

  /// Load completed games from SharedPreferences
  Future<void> _loadCompletedGames() async {
    final prefs = await SharedPreferences.getInstance();
    setState(() {
      completedGames = prefs.getStringList('completedGames')?.map((e) => int.parse(e)).toSet() ?? {};
    });
  }

  /// Save completed games to SharedPreferences
  Future<void> _saveCompletedGames() async {
    final prefs = await SharedPreferences.getInstance();
    prefs.setStringList('completedGames', completedGames.map((e) => e.toString()).toList());
  }

  /// Mark a game as completed
  void _markGameAsCompleted(int gameId) {
    setState(() {
      completedGames.add(gameId);
    });
    _saveCompletedGames();
  }

  /// Reset all completed games
  void _resetCompletedGames() {
    setState(() {
      completedGames.clear();
    });
    _saveCompletedGames();
  }

  /// Start a game and handle its completion
  void _startGame(BuildContext context, int gameId) async {
    final result = await Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) => GameDetailPage(
          gameId: gameId,
          onGameCompleted: () => _markGameAsCompleted(gameId),
        ),
      ),
    );
    if (result != null && result) {
      _markGameAsCompleted(gameId);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          "Game List",
          style: GoogleFonts.lexendDeca(),
        ),
        backgroundColor: Colors.green,
      ),
      body: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          SizedBox(height: 10),
          Text(
            "Choose a Game!",
            style: GoogleFonts.lexendDeca(fontSize: 25, color: Colors.black),
          ),
          SizedBox(height: 20),
          Expanded(
            child: ListView.builder(
              itemCount: games.length,
              itemBuilder: (context, index) {
                final game = games[index];
                return GameButton(
                  title: game.title,
                  color: game.color,
                  textColor: game.textColor,
                  isCompleted: completedGames.contains(game.id),
                  onPressed: () => _startGame(context, game.id),
                );
              }
            ),
          ),
          SizedBox(height: 10),
          ElevatedButton(
            onPressed: _resetCompletedGames,
            child: Text(
              "Reset All Games",
              style: GoogleFonts.lexendDeca(fontSize: 20, color: Colors.white),
            ),
            style: ElevatedButton.styleFrom(
              backgroundColor: Colors.red,
              padding: EdgeInsets.symmetric(horizontal: 100, vertical: 16),
            ),
          ),
          SizedBox(height: 10),
        ],
      ),
    );
  }
}


class GameButton extends StatelessWidget {
  final String title;
  final VoidCallback onPressed;
  final Color color;
  final Color textColor;
  final bool isCompleted;

  const GameButton({
    Key? key,
    required this.title,
    required this.onPressed,
    required this.color,
    required this.textColor,
    this.isCompleted = false,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 6.0),
      child: SizedBox(
        width: 150, // Adjusted width
        height: 50, // Adjusted height
        child: ElevatedButton(
          onPressed: onPressed, // Button always enabled
          style: ElevatedButton.styleFrom(
            backgroundColor: color, // Use the predefined color
            padding: EdgeInsets.zero,
          ),
          child: Stack(
            alignment: Alignment.center,
            children: [
              Text(
                title,
                style: GoogleFonts.lexendDeca(
                  fontSize: 16,
                  color: textColor, // Use the predefined text color
                ),
              ),
              if (isCompleted)
                Align(
                  alignment: Alignment.centerRight,
                  child: Icon(
                    Icons.check,
                    color: Colors.white,
                    size: 20, // Smaller icon size
                  ),
                ),
            ],
          ),
        ),
      ),
    );
  }
}
