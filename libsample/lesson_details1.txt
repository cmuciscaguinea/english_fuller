import 'package:flutter/material.dart';
import 'package:audioplayers/audioplayers.dart';
import 'package:google_fonts/google_fonts.dart';

class LessonDetailScreen extends StatefulWidget {
  final int lessonNumber;
  static const String routeName = '/lessondetails';

  LessonDetailScreen({Key? key, required this.lessonNumber, required String LessonDetailScreen}) : super(key: key);

  @override
  State<LessonDetailScreen> createState() => _LessonDetailScreenState();
}

class _LessonDetailScreenState extends State<LessonDetailScreen> {
  final AudioPlayer  audioPlayer = AudioPlayer();

  Map<String, dynamic> getLessonDetails(int lessonNumber) {
    var lessonContent = {
      1: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Alphabets Sounds',
        'words': ['Aa', 'Bb', 'Cc', 'Dd',
        'Ee', 'Ff', 'Gg', 'Hh', 'Ii', 
        'Jj', 'Kk', 'Ll', 'Mm', 
        'Nn', 'Oo', 'Pp', 'Qq', 
        'Rr', 'Ss', 'Tt', 'Uu', 
        'Vv', 'Ww', 'Xx', 'Yy', 'Zz'],
      },


      2: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Rhyming Words (Aa)',
        'words': [
          'Bad', 'Dad', 'Lad',
          'Bag', 'Nag', 'Wag',
          'Rat', 'Mat', 'Fat',
          'Gas', 'Has', 'Was',
          'Cap', 'Gap', 'Map'
        ],
      },

      3: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Rhyming Words (Ee)',
        'words': ['Bed', 'Red', 'Led', 
        'Beg', 'Leg', 'Peg',
        'Gem', 'Bem', 'hem', 
        'Pen', 'Ten', 'Yen', 
        'Get', 'Net', 'Set'],
      },


      4: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Rhyming Words (Ii)',
        'words': ['Bid', 'Lid', 'Kid', 
        'Big', 'Gig', 'Wig',
        'Dim', 'Him', 'Jim', 
        'Bin', 'Pin', 'Sin', 
        'Dip', 'Lip', 'Sip'],
      },

      5: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Rhyming Words (Oo)',
        'words': ['Bog', 'Cog', 'Mog', 
        'God', 'Nod', 'Rod',
        'Log', 'Hog', 'Jog', 
        'Dot', 'Got', 'Hot', 
        'Cot', 'Mot', 'Pot'],
      },

      6: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Rhyming Words (Uu)',
        'words': ['Cug', 'Rug', 'Tug', 
        'Bud', 'Sud', 'Mud',
        'Bum', 'Hum', 'Sum', 
        'Bun', 'Fun', 'Run', 
        'But', 'Hut', 'Rut'],
      },

      7: {
        'title': 'Lesson $lessonNumber',
        'subTitle': 'Hickory Dickory Dock',
        'words': ['Hickory, dickory, dock. The mouse ran up the clock. The clock struck one. The mouse ran down. Hickory, dickory, dock!'],
      },

      
      // Other lessons go here...
    };

    return lessonContent[lessonNumber] ?? {
      'title': 'Lesson Not Found',
      'subTitle': '',
      'words': [],
    };
  }


  @override
  void dispose() {
    audioPlayer.release();
    audioPlayer.dispose();
    super.dispose();
  }

  Future<void> playSound(String word) async {

    // String audioPath = '/sounds/${word.toLowerCase()}.mp3';
    // Source audioSource = AssetSource(audioPath);
    // await audioPlayer.play(audioSource);

    try {
      String audioPath = 'sounds/${word.toLowerCase()}.mp3';
      print("Attempting to play: $audioPath");
      Source audioSource = AssetSource(audioPath);
      await audioPlayer.play(audioSource);
      print("Playback started for $audioPath");
    } catch (e) {
      print("Error playing sound: ${e.toString()}");
    }
  }
 

  @override
  Widget build(BuildContext context) {
    final lessonDetails = getLessonDetails(widget.lessonNumber);

    List<List<String>> wordTriplets = [];
    for (int i = 0; i < lessonDetails['words'].length; i += 3) {
      wordTriplets.add(lessonDetails['words']
          .sublist(i, i + 3 > lessonDetails['words'].length ? lessonDetails['words'].length : i + 3));
    }

    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.green,
        title: Text(
          lessonDetails['title'],
          style: GoogleFonts.lexendDeca(),
        ),
        leading: IconButton(
          icon: Icon(Icons.arrow_back),
          onPressed: () {
            Navigator.of(context).pop();
          },
        ),
      ),
      body: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          Padding(
            padding: const EdgeInsets.symmetric(vertical: 16.0),
            child: Text(
              lessonDetails['subTitle'],
              style: GoogleFonts.lexendDeca(
                fontSize: 24,
                fontWeight: FontWeight.bold,
              ),
              textAlign: TextAlign.center,
            ),
          ),
          Expanded(
              child: GridView.builder(
                padding: EdgeInsets.all(8.0),
                gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                  crossAxisCount: 3, // Number of items in each row
                  crossAxisSpacing: 8.0, // Spacing between items horizontally
                  mainAxisSpacing: 8.0, // Spacing between items vertically
                ),
                itemCount: lessonDetails['words'].length,
                itemBuilder: (context, index) {
                  String word = lessonDetails['words'][index];
                  return Container(
                    padding: EdgeInsets.all(8.0),
                    decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.circular(8),
                      boxShadow: [
                        BoxShadow(
                          color: Colors.grey.withOpacity(0.5),
                          blurRadius: 4,
                          offset: Offset(0, 2),
                        ),
                      ],
                    ),
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text(
                          word,
                          style: GoogleFonts.lexendDeca(
                            fontSize: 30, // Adjust font size to fit
                            color: Colors.black,
                          ),
                          textAlign: TextAlign.center,
                        ),
                        IconButton(
                          icon: Icon(
                            Icons.play_circle,
                            color: Colors.green,
                            size: 30, // Adjust icon size if necessary
                          ),
                          onPressed: () {
                            playSound(word);
                          },
                        ),
                      ],
                    ),
                  );
                },
              ),
            ),

          Padding(
            padding: const EdgeInsets.symmetric(vertical: 10.0, horizontal: 10.0),
            child: ElevatedButton(
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.green,
                padding: EdgeInsets.symmetric(vertical: 20, horizontal: 20),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(10),
                ),
              ),
              onPressed: () {
                 Navigator.pop(context);
                print("Proceed Next Lessons");
              },
              child: Text(
                'Next Lesson',
                style: GoogleFonts.lexendDeca(
                  fontSize: 20,
                  color: Colors.white,
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}
